package database;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

public class FamilyDoctor implements Table {

	Integer doctorId = null;
	Integer patientId = null;
	Boolean isValid = null;
	
	/**
	 * Constructor for generating a submittable family doctor object
	 * using the request information of the submission form.
	 * 
	 * @param request	Request generated by family doctor submission form.
	 */
	public FamilyDoctor (HttpServletRequest request) {
		try {
			doctorId = Integer.parseInt(request.getParameter("f_doctor_id"));
			patientId = Integer.parseInt(request.getParameter("f_patient_id"));
		} catch (Exception e) {
			e.printStackTrace();
			isValid = false;
		}
	}
	
	/**
	 * Constructor for generating a displayable family doctor object
	 * using the result set of a select query on the family doctor table.
	 * 
	 * @param rs			The result set of the select query on the doctor table.
	 * @throws SQLException
	 */
	public FamilyDoctor (ResultSet rs) throws SQLException {
		doctorId = rs.getInt("DOCTOR_ID");
		patientId = rs.getInt("PATIENT_ID");
	}
	
	/**
	 * Checker of whether the object is ready for submission.
	 * 
	 * @return True if all required fields have information.
	 */
	@Override
	public boolean isValid() {
		if (doctorId != null 
				&& patientId != null) {
			return true;
		}
		return isValid;
	}

	/**
	 * Method for generating an sql insert statment for the family doctor table.
	 * 
	 * @return 	The sql insert statement.
	 */
	@Override
	public String generateInsertSql() {
		return "INSERT INTO FAMILY_DOCTOR VALUES (?,?)";
	}
	
	/**
	 * Method for generating an sql update statement for the family doctor table.
	 * 
	 * @return  The sql update statement.
	 */
	@Override
	public String generateUpdateSql() {
		return "UPDATE family_doctor"
				+ " SET doctor_id = ?,"
				+ " patient_id = ?"
			+ "WHERE doctor_id = ? "
				+ "AND patient_id = ?";
	}

	/**
	 * Getter for the doctorId attribute
	 * @return	The doctor ID of the family doctor record.
	 */
	public Integer getDoctorId() {
		return doctorId;
	}

	/**
	 * Getter for patientId attribute.
	 * @return	The patient ID of the family doctor record.
	 */
	public Integer getPatientId() {
		return patientId;
	}

}
